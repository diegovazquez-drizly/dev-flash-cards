question|answer_1|answer_2|answer_3|answer_4|correct_answer|detailed_answer|tag_1|tag_2|tag_3
What is the main advantage of using microservices architecture?|Centralized management|Decoupled modules|Single point of failure|Tight coupling|Decoupled modules|Microservices architecture breaks down applications into smaller, loosely coupled services that can be developed, deployed, and scaled independently.|system design|microservices|architecture
What is a load balancer used for in system design?|Storing data|Load testing|Distributing traffic evenly|Logging errors|Distributing traffic evenly|A load balancer distributes incoming network traffic across multiple servers to ensure no single server becomes overwhelmed, improving availability and reliability.|system design|load balancer|scalability
Which database is best for unstructured data?|SQL database|NoSQL database|Relational database|Spreadsheet|NoSQL database|NoSQL databases are designed to handle unstructured data, enabling flexible schema design and supporting various data formats such as documents, key-value pairs, and graphs.|system design|database|NoSQL
What is the CAP Theorem in distributed systems?|Consistency, Availability, Partition Tolerance|Capacity, Accuracy, Profit|Compliance, Accessibility, Performance|Connection, Accountability, Privacy|Consistency, Availability, Partition Tolerance|The CAP Theorem states that it is impossible for a distributed system to simultaneously achieve consistency, availability, and partition tolerance. You can only have two of these three properties at most.|system design|distributed systems|CAP theorem
What is sharding in database architecture?|Encrypting data|Backing up data|Partitioning data|Normalizing data|Partitioning data|Sharding involves partitioning a database into smaller, faster, more easily managed pieces called shards, which can be spread across multiple servers.|system design|database|sharding
Which type of cache is closest to the CPU?|Distributed cache|Disk cache|L1 cache|Application cache|L1 cache|L1 cache is the closest to the CPU and provides the fastest access to frequently used data, significantly speeding up computational processes.|system design|cache|performance
What does "scalability" refer to in system design?|System security|System flexibility|System robustness|System's ability to handle increased load|System's ability to handle increased load|Scalability refers to the capacity of a system to handle an increased load by adding more resources, such as CPU, memory, or additional servers.|system design|scalability|performance
In a relational database, what does normalization do?|Improves query performance|Denormalizes data|Removes redundancy and ensures dependencies|Adds redundant data|Removes redundancy and ensures dependencies|Normalization is the process of organizing a database to reduce redundancy and improve data integrity by ensuring dependencies are properly enforced.|system design|database|normalization
Why use a message queue in a distributed system?|Real-time data analytics|Immediate data processing|Asynchronous communication|Data validation|Asynchronous communication|Message queues enable asynchronous communication between services, allowing services to function independently and improving system resilience and scalability.|system design|message queues|async communication
What is a "single point of failure" (SPOF) in system design?|A scalable component|A redundant component|A non-critical component|A component whose failure can cause the entire system to fail|A component whose failure can cause the entire system to fail|A single point of failure (SPOF) is a part of a system that, if it fails, will stop the entire system from working. Identifying and eliminating SPOFs improves system reliability.|system design|reliability|SPOF
What is an API Gateway?|A firewall configuration|A middleware for logging|A server for routing API requests|A database management system|A server for routing API requests|An API Gateway acts as a single entry point for API requests, routing them to appropriate services and handling tasks like load balancing, rate limiting, and authentication.|system design|API Gateway|routing
What does CDN stand for and what is its primary purpose?|Content Data Network, for database storage|Content Delivery Network, for content distribution|Centralized Data Network, for data analysis|Cached Data Network, for caching|Content Delivery Network, for content distribution|A Content Delivery Network (CDN) is a network of servers distributed geographically to deliver web content faster and more efficiently to users based on their location.|system design|CDN|content delivery
What type of architecture does a monolithic application follow?|Client-Server|Layered|Microservices|Single-tiered|Single-tiered|A monolithic application is built as a single, indivisible unit where components are interconnected and interdependent, leading to challenges in scaling and maintaining the application.|system design|architecture|monolithic
What is the goal of load testing?|To find security vulnerabilities|To improve user interface|To simulate user load on software|To add new features|To simulate user load on software|Load testing is used to simulate user load on software to identify performance bottlenecks and determine how the system behaves under expected and peak load conditions.|system design|testing|load testing
What is the primary function of a proxy server?|Encrypting data|Balancing traffic|Caching content and improving security|Storing backups|Caching content and improving security|A proxy server acts as an intermediary for requests from clients seeking resources, providing functions like caching content and improving security through content filtering and privacy.|system design|proxy|security
What is eventual consistency in distributed systems?|Immediate data consistency|Data inconsistencies|Final state data consistency|Temporary data storage|Final state data consistency|Eventual consistency means that, given enough time, all copies of data in a distributed system will converge to the same value, even if they are temporarily inconsistent.|system design|distributed systems|consistency
What is the primary purpose of using a reverse proxy?|To initiate requests|To serve static content|To distribute client requests to backend servers|To authenticate users|To distribute client requests to backend servers|A reverse proxy sits in front of backend servers and distributes client requests across multiple servers to balance the load and improve performance and reliability.|system design|proxy|load balancing
What is the purpose of a relational database's foreign key?|To normalize data|To define a relationship between tables|To create indexes|To store JSON data|To define a relationship between tables|A foreign key in a relational database establishes a link between two tables, ensuring referential integrity by enforcing relationships between data.|system design|database|foreign key
What does the term "horizontal scaling" imply?|Increasing the capacity of individual machines|Adding more instances of machines|Improving the efficiency of a single process|Consolidating resources|Adding more instances of machines|Horizontal scaling (scaling out) involves adding more machines or instances to handle additional load, as opposed to vertical scaling which increases the capacity of individual machines.|system design|scalability|horizontal scaling
What is the purpose of an index in a database?|Storing data|Backing up data|Improving query performance|Encrypting data|Improving query performance|Database indexes improve query performance by allowing the database to find rows more quickly than scanning the entire table.|system design|database|index
What is a polyglot persistence strategy?|Using a single type of database|Combining non-database storage solutions|Using multiple kinds of databases|Storing data in files|Using multiple kinds of databases|Polyglot persistence involves using different data storage technologies to handle various data storage needs within a system, optimizing for specific use cases.|system design|database|polyglot persistence
What does the term "High Availability" refer to?|Low latency|Frequent downtimes|Minimal interruptions|Scalability issues|Minimal interruptions|High Availability (HA) refers to systems that are designed to be operational without interruption for long periods of time, minimizing downtime and ensuring continuous service.|system design|availability|HA
What is the main concept behind CQRS (Command Query Responsibility Segregation)?|Combining read and write models|Separating read and write models|Using a single database for all operations|Storing commands in queues|Separating read and write models|CQRS is a pattern where the read and write operations are handled by separate models, optimizing efficiency and scalability by tailoring each operation to its specific requirements.|system design|patterns|CQRS
What is the role of a circuit breaker in system design?|Improving data integrity|Enhancing UI design|Preventing system failures from cascading|Balancing network traffic|Preventing system failures from cascading|A circuit breaker prevents system failures from cascading by detecting failures and temporarily blocking further attempts to call the failing operation, enabling the system to recover.|system design|resilience|circuit breaker
What is a data warehouse used for?|Real-time data processing|Operational data management|Long-term data storage and analytical processing|Storing user session data|Long-term data storage and analytical processing|A data warehouse is a centralized repository for storing large amounts of data from various sources, optimized for querying and analytical reporting.|system design|data warehouse|analytics
